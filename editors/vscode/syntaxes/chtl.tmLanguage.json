{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "CHTL",
  "scopeName": "source.chtl",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#script-block"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#entities"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "script-block": {
      "begin": "(script)\\s*(\\{)",
      "beginCaptures": {
        "1": { "name": "keyword.other.chtl" },
        "2": { "name": "meta.brace.curly.chtl" }
      },
      "end": "\\}",
      "endCaptures": {
        "0": { "name": "meta.brace.curly.chtl" }
      },
      "patterns": [
        {
          "include": "#enhanced-selector"
        },
        {
          "include": "#responsive-value"
        },
        {
          "include": "#chtl-js-keywords"
        },
        {
          "include": "#comments"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#punctuation"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.chtl",
          "match": "# .*"
        },
        {
          "name": "comment.line.double-slash.chtl",
          "match": "//.*"
        },
        {
          "name": "comment.block.chtl",
          "begin": "/\\*",
          "end": "\\*/",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.chtl"
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.block.chtl",
          "match": "\\b(\\[Template\\]|\\[Custom\\]|\\[Import\\]|\\[Namespace\\]|\\[Configuration\\]|\\[Origin\\]|\\[Info\\]|\\[Export\\]|\\[Name\\]|\\[OriginType\\])\\b"
        },
        {
          "name": "keyword.other.chtl",
          "match": "\\b(text|style|script|if|else|except|insert|delete|use|from|as|inherit|at|top|bottom|after|before|replace|condition|load|target|duration|easing|begin|when|end|loop|direction|delay|callback|url|page|root|mode)\\b"
        },
        {
          "name": "storage.type.modifier.chtl",
          "match": "@(Style|Element|Var|Html|JavaScript|Chtl|CJmod|Config|Vue|Markdown)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.chtl",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.chtl",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.chtl",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.chtl",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "name": "entity.name.tag.chtl",
          "match": "^\\s*([a-zA-Z][a-zA-Z0-9]*)(?=\\s*\\{)"
        },
        {
          "name": "entity.other.attribute-name.chtl",
          "match": "([a-zA-Z\\-]+)(?=\\s*[:=])"
        },
        {
          "name": "variable.other.property.chtl",
          "match": "\\.([a-zA-Z_][a-zA-Z0-9_]*)"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.numeric.chtl",
          "match": "\\b\\d+(\\.\\d+)?(px|%|em|rem|s|ms)?\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.chtl",
          "match": "(\\+|\\-|\\*\\*|\\*|/|%)"
        },
        {
          "name": "keyword.operator.comparison.chtl",
          "match": "(>|<|==|!=)"
        },
        {
          "name": "keyword.operator.logical.chtl",
          "match": "(&&|\\|\\|)"
        },
        {
          "name": "keyword.operator.assignment.chtl",
          "match": "(:|=)"
        },
        {
            "name": "keyword.operator.ternary.chtl",
            "match": "(\\?|:)"
        },
        {
          "name": "keyword.operator.arrow.chtl",
          "match": "->"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.terminator.statement.chtl",
          "match": ";"
        },
        {
            "name": "punctuation.separator.comma.chtl",
            "match": ","
        },
        {
          "name": "meta.brace.curly.chtl",
          "match": "(\\{|\\})"
        },
        {
          "name": "meta.brace.square.chtl",
          "match": "(\\[|\\])"
        },
        {
          "name": "meta.brace.round.chtl",
          "match": "(\\()|(\\))"
        }
      ]
    },
    "enhanced-selector": {
      "name": "variable.other.selector.enhanced.chtl-js",
      "begin": "\\{\\{",
      "end": "\\}\\}",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.variable.begin.chtl-js" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.variable.end.chtl-js" }
      }
    },
    "responsive-value": {
      "name": "variable.other.responsive.chtl-js",
      "begin": "\\$",
      "end": "\\$",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.variable.begin.chtl-js" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.variable.end.chtl-js" }
      }
    },
    "chtl-js-keywords": {
      "patterns": [{
        "name": "keyword.other.chtl-js",
        "match": "\\b(ScriptMain|ScriptLoader|Listen|Delegate|Animate|Vir|Router|PrintMylove|INeverAway|util|change|end)\\b"
      }]
    }
  }
}
