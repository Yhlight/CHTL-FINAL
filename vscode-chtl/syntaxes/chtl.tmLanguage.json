{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "CHTL",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#entities"
        },
        {
            "include": "#properties"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.chtl",
                    "match": "//.*"
                },
                {
                    "name": "comment.block.chtl",
                    "begin": "/\\*",
                    "end": "\\*/"
                },
                {
                    "name": "comment.line.generator.chtl",
                    "match": "#\\s.*"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.chtl",
                    "match": "\\b(text|style|script|div|span|html|head|body|p|a|img|ul|ol|li|table|tr|td|th|form|input|button|select|option|textarea)\\b"
                },
                {
                    "name": "keyword.control.chtl",
                    "match": "\\b(inherit|delete|insert|after|before|replace|at top|at bottom|from|as|except|use|html5)\\b"
                },
                {
                    "name": "keyword.control.chtl",
                    "match": "(@Style|@Element|@Var|@Html|@JavaScript|@Chtl|@CJmod|@Config|@Vue|@Markdown)"
                },
                {
                    "name": "storage.type.chtl",
                    "match": "(\\[Template\\]|\\[Custom\\]|\\[Origin\\]|\\[Import\\]|\\[Namespace\\]|\\[Configuration\\]|\\[Name\\]|\\[OriginType\\]|\\[Info\\]|\\[Export\\])"
                },
                {
                    "name": "keyword.control.chtljs",
                    "match": "\\b(ScriptMain|ScriptLoader|Listen|Delegate|Animate|Vir|Router|PrintMylove|INeverAway|util|change|end)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.chtl",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.chtl",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.chtl",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.chtl",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.unquoted.chtl",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*|\\d+(\\.\\d+)?(px|em|rem|%|s|ms|deg|turn|vh|vw)?)\\b"
                }
            ]
        },
        "entities": {
            "patterns": [
                {
                    "name": "entity.name.tag.chtl",
                    "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*)"
                },
                {
                    "name": "entity.other.attribute-name.class.chtl",
                    "match": "\\.([a-zA-Z_][a-zA-Z0-9_]*)"
                },
                {
                    "name": "entity.other.attribute-name.id.chtl",
                    "match": "#([a-zA-Z_][a-zA-Z0-9_]*)"
                },
                {
                    "name": "entity.name.function.chtl",
                    "match": "(&|{{|}})"
                }
            ]
        },
        "properties": {
            "patterns": [
                {
                    "name": "support.type.property-name.css.chtl",
                    "match": "([a-zA-Z-]+)(?=:|=)"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.chtl",
                    "match": "(:|=|>|<|\\?|\\+|\\-|\\*|/|%|\\*\\*|&&|\\|\\||&->|->)"
                }
            ]
        }
    },
    "scopeName": "source.chtl"
}
